#include <iostream>
#include <cstdlib>
#include <ctime>
#include <string>
#include <thread>
#include <chrono>
#include <cmath>
#include <iomanip>
#include <cstdlib>
#include <ctime>
#include <stdio.h>
#include <stdlib.h>

using namespace std;
using std::cout;
using std::flush;
using std::string;
using std::this_thread::sleep_for;
using std::chrono::milliseconds;


 
// Forward declare the slow_print function
void slow_print(const string&, unsigned int);

// Main function

 void show_health_bar(std::ostream& os, int asr,
                       std::string text, char sign = '*')
{
    static const auto health_length = 100;
    // not including the percentage figure and spaces

    if (text.length() >= health_length) {
        os << text << '\n';
        text.clear();
    } else {
        text += " ";
    }

    const auto health_level = 100.0 / (health_length - text.length());

    std::cout << text;

    for (double pct = 0; pct <= 100; pct += health_level) {
        text += sign;
        os << "\r [" << std::setw(3) << static_cast<int>(pct) << "%] "
           << text << std::flush;
        std::this_thread::sleep_for(std::chrono::milliseconds(asr));
    }
    os << "\n\n";
}


int main()
{
    string message = "Your next mission is going to be based in Quadrant 4 of the Depok solar system \nYou have to land on the Planet Asguar with the BM41 Spaceship with Leuitenant Troy \nThis planet is has commited treason against the untied federanion and it is your \njob to defeat the main leaders on the united resistance in order to stop treason \nfrom spreading in the nation\n";
    show_health_bar(std::clog, 100, "LODING GAME PlEASE WAIT:", ':');
    
    cout << "Press ENTER twice....";
    cin.ignore();
    cin.get();


  
  
cout <<   "               ,--.    ,--.              "<<endl;
cout <<   "              ((O ))--((O ))             "<<endl;
cout <<   "            ,'_`--'____`--'_`.           "<<endl;
cout <<   "           _:  ____________  :_          "<<endl;
cout <<   "          | | ||::::::::::|| | |     **************************************   "<<endl;
cout <<   "          | | ||::::::::::|| | |     * LEUITENANT: RIKER                  *   "<<endl;
cout <<   "          | | ||::::::::::|| | |     * POSITION:   Head of USS Enterprise *   "<<endl;
cout <<   "          |_| ||__________|| |_|     **************************************   "<<endl;
cout <<   "            |________________|           "<<endl;
cout <<   "         __..-'            `-..__        "<<endl;
cout <<   "      .-| : .----------------. : |-.     "<<endl;
cout<< "+-----------------------------------------------------------------------------------------------+ \n";
      
     
    slow_print(message, 80);
    
    cout << "Press ENTER twice....";
    cin.ignore();
    cin.get(); 
    
  
    int option;
    int ohealth, health, a, set, strike, protect, swift, ostrike, oprotect, oswift, harm, oharm;
    strike = 10;
    protect= 15;
    swift = 5;
    ostrike = 10;
    oprotect = 15;
    oswift = 5;
 
    srand(unsigned(time(0)));
    set = rand()%2+1;
    ohealth = rand()%50+60;
    health = rand()%20+80;
    if (set == 1){
     
    return 0;
    
    
    
}
  cout <<     "................................" <<endl;
    cout <<    " |                              |" <<endl;
    cout <<    " |  Start Score: 100            |" <<endl; 
    cout <<    " |  Your Goemul # 04 - Zeplin   |" <<endl;
    cout <<    " |                              |" <<endl;
    cout <<    " ................................" <<endl;
 
 
  cout <<       "             .~~-.      _.    " <<endl;
  cout <<       "   .''..    (_~)  ) _.-'. ;   " <<endl;
  cout <<       "   '.'..'..-(_~ _-'*. .'.'    " <<endl;
  cout <<       "     ''.'.. _ ~~  _  ';'      " <<endl;
  cout <<       "      .''. (_)   (_)  '.      " <<endl;
  cout <<       "      ;      ...     '.       " <<endl;
  cout <<       "  .''.'.   .''`-'''.    '.''. " <<endl;
  cout <<       " '.  '   ;         ;    ;  ; " <<endl;
  cout <<       "   '.   ;           ;   ' ;  " <<endl;
  cout <<       "     '.  ;           ;    ;   " <<endl;
  cout <<       "     '.  ;         ;   .'    " <<endl;
  cout <<       "      .'...:..___..:..':.     " <<endl;
  cout <<       "  .''     ..'    '...   ~)   " <<endl;
  cout <<       "  (.....'''           ''''    " <<endl;
  while(health > 0 || ohealth > 0){
        cout << "+...........................................................................................+\n";
        cout << "ATTACK NOW\n [1] Energy ball \n [2] Fire Attack \n [3] Dizzy punch\n";
        cout << "+...........................................................................................+\n";
        do{cin >> option;} while(option > 3 || option < 1);
        switch (option){
        case 1:
            strike = rand()%20+10;
            protect= rand()%10+10;
            swift = rand()%5;
            break;
        case 2:
            strike= rand()%5+10;
            protect = rand()%10+10;
            swift = rand()%15;
            break;
        case 3:
            strike= rand()%10+10;
            protect= rand()%20+10;
            swift = rand()%5;
            break;
        }
        option = rand()%3;
 
        switch (option){
        case 1:
            ostrike = rand()%20+10;
            oprotect = rand()%10+10;
            oswift = rand()%5;
            break;
        case 2:
            ostrike = rand()%5+10;
            oprotect = rand()%10+10;
            oswift = rand()%15;
            break;
        case 3:
            ostrike = rand()%10+10;
            oprotect = rand()%20+10;
            oswift = rand()%5;
            break;
        }
        oharm = (strike - oswift) - (oprotect/protect);
        if (oharm <0){
        oharm = 0;
        }
        ohealth = ohealth - oharm;
        cout << "You did " << oharm << " amount of destruction upon the damage to the opposition!\n";
        cin.get();
 
        if(ohealth < 1) {
            cout << "You have destroyed your opponent the! Plantent Asguar is now safer but there are more enemies ahead\n";
            cin.get();
            return 0;
        }
 
        cout << "Your opponent has " << ohealth << " HP left now.\n";
        harm = (ostrike - swift) - ( protect / ostrike);
        if (harm < 0)
        {
            harm = 0;
        }
        health = health - harm;
 
        cout << "Your opponent hurt your Goemul so you've lost " << harm << " points and currently have, " << health << " HP points remaining\n";
 
        if (health < 1) {
            cout << "Your Goemul died! Your opponent still has " << ohealth << " HP remaining";
            cin.get();
            return 0;
        }
        else {
           
 
        while(health > 0 || ohealth > 0){
        cout << "+...........................................................................................+\n";
        cout << "ATTACK NOW\n [1] Energy ball \n [2] Fire Attack \n [3] Dizzy punch\n";
        cout << "+...........................................................................................+\n";
            do{cin >> option;} while(option > 3 || option < 1);
            switch (option){
            case 1:
                strike = rand()%20+10;
                protect = rand()%10+10;
                swift = rand()%5;
                break;
            case 2:
                strike= rand()%5+10;
                protect = rand()%10+10;
                swift = rand()%15;
                break;
            case 3:
                strike = rand()%10+10;
                protect = rand()%20+10;
                swift = rand()%5;
                break;
            }
            option = rand()%3;
 
            switch (option){
            case 1:
                ostrike = rand()%20+10;
                oprotect = rand()%10+10;
                oswift = rand()%5;
                break;
            case 2:
                ostrike = rand()%5+10;
                oprotect = rand()%10+10;
                oswift = rand()%15;
                break;
            case 3:
                ostrike = rand()%10+10;
                oprotect = rand()%20+10;
                swift = rand()%5;
                break;
            }
             oharm = (strike - oswift) - (oprotect/strike);
            if (oharm <0){
            oharm = 0;
            }
            ohealth = ohealth - oharm;
            cout << "You did " << oharm << "amount of destruction upon the damage to the opposition!\n";
            cin.get();
 
            if(ohealth < 1) {
                cout << "You have destroyed your opponent the! Plantent Asguar is now safer but there are more enemies ahead\n";
                cin.get();
                return 0;
            }
 
            cout << "The monter now has " << ohealth << " HP left.\n";
             harm= (ostrike - swift) - (protect / ostrike);
            if (harm < 0)
            {
                harm = 0;
            }
            health = health - harm;
 
             cout << "Your opponent hurt your Goemul so you've lost " << harm << " points and currently have, " << health << " HP points remaining\n";
            if (health < 1) {
                cout << "Your Goemul died! Your opponent still has " << ohealth << " HP remaining";
                cin.get();
                return 0;
            }
        }
    }
}
}





// Implement the slow_print function
/**
 * Function to print each character in a string with a delay (a "typewriter" effect)
 * @param message         The string to print
 * @param millis_per_char Milliseconds to take to print each character
 */
void slow_print(const string& message, unsigned int millis_per_char)
{
    // Range loops are "for each" constructs; here: for each character in the string
    for (const char c: message)
    {
        // flush is used to make sure the buffer is emptied to the terminal immediately
        cout << c << flush;

        // Ask the thread to sleep for at least n millis.
        sleep_for(milliseconds(millis_per_char));
    }
}
 
